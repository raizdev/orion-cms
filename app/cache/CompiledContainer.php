<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'Orion\\Framework\\Service\\ValidatorService' => 'get1',
  'Orion\\Framework\\Service\\TwigService' => 'get2',
  'Odan\\Session\\SessionInterface' => 'get3',
  'router' => 'get4',
  'router.configuration.metadata_cache' => 'get5',
  'router.configuration.metadata_sources' => 'get6',
  'subEntry1' => 'get7',
  'PHLAK\\Config\\Interfaces\\ConfigInterface' => 'get8',
  'middlewares' => 'get9',
  'subEntry2' => 'get10',
  'subEntry3' => 'get11',
  'subEntry4' => 'get12',
);

    protected function get1()
    {
        return $this->resolveFactory(static function ($container) {
        $config = $container->get(\ConfigInterface::class);
        return new \Validator($config->get('validation'));
    }, 'Orion\\Framework\\Service\\ValidatorService');
    }

    protected function get2()
    {
        return $this->resolveFactory([
            0 => 'Orion\\Framework\\Provider\\TwigServiceProvider',
            1 => 'register',
        ], 'Orion\\Framework\\Service\\TwigService');
    }

    protected function get3()
    {
        return $this->resolveFactory(static function ($container) {
        $session = new \Odan\Session\PhpSession();
        $session->setOptions([
            'name' => $_ENV['SESSION_NAME'],
            'cache_expire' => $_ENV['SESSION_CACHE_EXPIRE'],
        ]);

        $session->start();
        return $session;
    }, 'Odan\\Session\\SessionInterface');
    }

    protected function get4()
    {
        return $this->resolveFactory(static function ($container) {
        $loader = new \Sunrise\Http\Router\Loader\DescriptorDirectoryLoader();
        $loader->setContainer($container);
        $loader->setCache($container->get('router.configuration.metadata_cache'));
        $loader->attachArray($container->get('router.configuration.metadata_sources'));

        $router = new \Sunrise\Http\Router\Router();
        $router->load($loader);

        return $router;
    }, 'router');
    }

    protected function get5()
    {
        return $this->resolveFactory(static function () {
        return new \Symfony\Component\Cache\Psr16Cache(new \Symfony\Component\Cache\Adapter\ArrayAdapter());
    }, 'router.configuration.metadata_cache');
    }

    protected function get7()
    {
        return \DI\Definition\StringDefinition::resolveExpression('<nested definition>', '/var/www/hablush.habbo.ng/src/Frontend/Controllers', $this->delegateContainer);
    }

    protected function get6()
    {
        return [
            0 => $this->get7(),
        ];
    }

    protected function get8()
    {
        return $this->resolveFactory(static function ($container) {
        return new \PHLAK\Config\Config('/var/www/hablush.habbo.ng/app/etc/services' . '/../../config/settings.json');
    }, 'PHLAK\\Config\\Interfaces\\ConfigInterface');
    }

    protected function get10()
    {
        $object = new Orion\Framework\Middleware\ErrorHandlingMiddleware();
        return $object;
    }

    protected function get12()
    {
        return $this->delegateContainer->get('Odan\\Session\\SessionInterface');
    }

    protected function get11()
    {
        $object = new Odan\Session\Middleware\SessionMiddleware($this->get12());
        return $object;
    }

    protected function get9()
    {
        return [
            0 => $this->get10(),
            1 => $this->get11(),
        ];
    }

}
